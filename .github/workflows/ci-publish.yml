name: CI & Publish to npm

on:
  push:
    branches: [main]
    tags: ["v*.*.*"] # Ex: v1.0.0

jobs:
  test:
    name: 🧪 Run Vitest Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: 🔧 Install deps
        run: cd pkg && pnpm install

      - name: 🧪 Run Vitest
        run: cd pkg && pnpm test

  build-binaries:
    name: 🔨 Build Rust Binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            arch: x64
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            platform: win32
            arch: x64
            target: x86_64-pc-windows-msvc
          - os: macos-latest
            platform: darwin
            arch: x64
            target: x86_64-apple-darwin
          - os: macos-latest
            platform: darwin
            arch: arm64
            target: aarch64-apple-darwin

    steps:
      - uses: actions/checkout@v4

      - name: 🦀 Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: 🔧 Build Rust Binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}

      - name: 📁 Create bin directory
        run: mkdir -p pkg/bin
        shell: bash

      - name: 📋 Copy binary (Unix)
        if: matrix.platform != 'win32'
        run: |
          cp target/${{ matrix.target }}/release/snapzip pkg/bin/snapzip-${{ matrix.platform }}-${{ matrix.arch }}
          chmod +x pkg/bin/snapzip-${{ matrix.platform }}-${{ matrix.arch }}
        shell: bash

      - name: 📋 Copy binary (Windows)
        if: matrix.platform == 'win32'
        run: |
          cp target/${{ matrix.target }}/release/snapzip.exe pkg/bin/snapzip-${{ matrix.platform }}-${{ matrix.arch }}.exe
        shell: bash

      - name: 📤 Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: snapzip-${{ matrix.platform }}-${{ matrix.arch }}
          path: pkg/bin/snapzip-${{ matrix.platform }}-${{ matrix.arch }}${{ matrix.platform == 'win32' && '.exe' || '' }}
          if-no-files-found: error

  publish:
    name: 🚀 Publish to npm
    needs: [test, build-binaries]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: "https://registry.npmjs.org/"

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: 📥 Install deps
        run: |
          cd pkg && pnpm install
          cd pkg && pnpm build

      - name: 📁 Create bin directory
        run: mkdir -p pkg/bin

      - name: 📥 Download all binary artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: 📋 Copy binaries to pkg/bin
        run: |
          cp artifacts/snapzip-linux-x64/snapzip-linux-x64 pkg/bin/
          cp artifacts/snapzip-win32-x64/snapzip-win32-x64.exe pkg/bin/
          cp artifacts/snapzip-darwin-x64/snapzip-darwin-x64 pkg/bin/
          cp artifacts/snapzip-darwin-arm64/snapzip-darwin-arm64 pkg/bin/
          chmod +x pkg/bin/snapzip-linux-x64
          chmod +x pkg/bin/snapzip-darwin-x64
          chmod +x pkg/bin/snapzip-darwin-arm64
          ls -la pkg/bin/

      - name: 🚀 Publish to npm
        run: cd pkg && npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
