name: Build and Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build and test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            target: linux
          - os: windows-latest
            target: win64
          - os: macos-latest
            target: macos

    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Check code formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Lint with clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release

      - name: Create release archive
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          mkdir -p dist
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            tar -czf dist/snapzip-${{ matrix.target }}.tar.gz -C target/release snapzip.exe
          else
            tar -czf dist/snapzip-${{ matrix.target }}.tar.gz -C target/release snapzip
          fi
        shell: bash

      - name: Upload artifacts
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: snapzip-${{ matrix.target }}
          path: dist/snapzip-${{ matrix.target }}.tar.gz
